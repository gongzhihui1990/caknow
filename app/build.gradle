apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.caknow.android"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 6
        versionName "1.0.6"
        multiDexEnabled true
        multiDexKeepProguard file("multidexKeep.pro")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file('/apkFile/psw_android.keystore')
            keyPassword 'android'
            keyAlias 'china'
            storePassword 'android'
        }
        debug {
            storeFile file('/apkFile/psw_android.keystore')
            keyPassword 'android'
            keyAlias 'china'
            storePassword 'android'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            buildConfigField("String", "Release_Info", "\"V" + defaultConfig.getVersionName() +
                    " " + new Date().format("yyyy-MM-dd") + "\"")
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField("String", "Release_Info", "\"V" + defaultConfig.getVersionName() +
                    " " + new Date().format("yyyy-MM-dd") + "\"")
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            //output ->
            System.err.println("runTasks:" + variant.buildType.name)
            def fileName = "${appName()}" +
                    "_" + variant.buildType.name +
                    "_${versionName}" +
                    "_${versionCode}" +
                    "_${buildTime()}" +
                    ".apk"
            outputFileName = fileName
        }
    }

}
static def appName() {
    return "Caknow"
}
static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmSS')
    return formattedDate
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(path: ':gtrFrame')
    /*jakewharton*/
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    /*bugly*/
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.4'
    compile 'com.tencent.bugly:nativecrashreport:3.3.1'
    /*over scroll*/
    compile 'me.everything:overscroll-decor-android:1.0.4'
    /*banner*/
    compile 'com.youth.banner:banner:1.4.10'
    /*glide*/
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp-integration:1.4.0@aar'
    /*ok http*/
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    /*rotrofit*/
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.justkiddingbaby:vercodeedittext:1.0.5'
    compile 'com.facebook.android:facebook-login:[4,5)'
    /*fragment*/
    compile 'com.justkiddingbaby:fragment-rigger:1.0.0'
}
